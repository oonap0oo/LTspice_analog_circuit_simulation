#!/usr/bin/env python3
#
#  chua_circuit_plots_v2.py
#  
#  Copyright 2025 Nap0
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  

import csv # library to read csv files, data in text format
import matplotlib.pyplot as plt # plotting
from matplotlib.gridspec import GridSpec # align subplots also with variable size
from mpl_toolkits.mplot3d import axes3d # set different perspective for 3D plots

# python lists to contain the imported data
Time = [] # time axis for referencing other data points
V1 = [] # voltage across capacitor 2
V2 = [] # voltage across capacitor 1
I_L1 = [] # current through inductor 1

# **** importing data from file *******************************

# read the data file which was generated by LTspice analog simulation software
with open("chua_circuit_6.txt") as datafile:
    # generate a csv reader object, data is delimited with tabs
    reader_object = csv.reader(datafile, delimiter = "\t")
    # iterate the object once, the first row is the header
    first_row = next(reader_object)  
    # iterate throught the complte object, row is a list containing strings  
    for row in reader_object:
        Time.append(float(row[0])) # convert the items on a row to floats
        V1.append(float(row[1])) # and add them to the appropriate lists
        V2.append(float(row[2]))
        I_L1.append(float(row[3]))

# show number of value sets imported        
print(f"{len(Time)} values imported for time, V(1), V(2) and I(L1)")

# ***** plotting ****************************************************

# gridspec object defines subplots and their relative size
gs = GridSpec(3, 3, width_ratios=[2, 1, 4], height_ratios=[1, 1, 1])

# generate figure window
fig = plt.figure(figsize = (15, 10),
    num = "Chua's circuit, capacitor voltages and inductor current")

# first set of subplots showing signals vs time
ax = fig.add_subplot(gs[0])
ax.set_title("Voltage C1 vs time", fontweight = "bold", size = 12)
ax.plot(Time, V2, linewidth=0.25, color="red")
ax = fig.add_subplot(gs[3])
ax.set_title("Voltage C2 vs time", fontweight = "bold", size = 12)
ax.plot(Time, V1, linewidth=0.25, color="red")
ax = fig.add_subplot(gs[6])
ax.set_title("Current L1 vs time", fontweight = "bold", size = 12)
ax.plot(Time, I_L1, linewidth=0.25, color="red")

# second set of subplots showing signals vs each other
ax = fig.add_subplot(gs[1])
ax.set_title("Current L1 vs voltage C1", fontweight = "bold", size = 12)
ax.plot(V2, I_L1, linewidth=0.1, color="green")
ax = fig.add_subplot(gs[4])
ax.set_title("Voltage C2 vs current L1", fontweight = "bold", size = 12)
ax.plot(I_L1, V1, linewidth=0.1, color="green")
ax = fig.add_subplot(gs[7])
ax.set_title("Voltage C2 vs voltage C1", fontweight = "bold", size = 12)
ax.plot(V2, V1, linewidth=0.1, color="green")

# 3d subplot showing the two voltages and 1 current as 3d line plot
ax = fig.add_subplot(gs[:,2], projection='3d')
ax.set_proj_type('persp', focal_length=0.3)
ax.set_title("3D plot of capacitor voltages and inductor current",
    fontweight = "bold", size = 12)
ax.plot(V2, V1, I_L1, color = "blue", linewidth=0.2)
ax.set_xlabel("Voltage C1", size = 12)
ax.set_ylabel("Voltage C2", size = 12)
ax.set_zlabel("Current L1", size = 12)

# define space between subplots
plt.tight_layout(pad = 2)

# start with plot window maximized, this works at least in linux..
mng = plt.get_current_fig_manager()
mng.resize(*mng.window.maxsize())

plt.show()

